plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.15'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'WewalkPay'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '1.8'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	
}

repositories {
	mavenCentral()
}

repositories {
	maven { url 'https://jitpack.io' }
}

/*dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.1'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-java'
	annotationProcessor 'mysql:mysql-connector-java'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.3.1'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.session:spring-session-jdbc'
	implementation 'com.mysql:mysql-connector-j'

	implementation 'com.github.iamport:iamport-rest-client-java:0.2.21'
	
	implementation 'commons-io:commons-io:2.6'
	

}*/

/*
	spring-boot : 2.7.15v
	jpa
	thymeleaf
	mysql
	oauth2
	security
	Spring Session JDBC
	lombok
	commons-io
	devtools
*/
dependencies {

    // Spring Boot Starter Dependencies
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    
    // Thymeleaf Extras
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

    // MySQL Connector
    runtimeOnly 'com.mysql:mysql-connector-j'
    
    // Spring Session JDBC
    implementation 'org.springframework.session:spring-session-jdbc'
    
    // IAMPORT
    implementation 'com.github.iamport:iamport-rest-client-java:0.2.21'
    
    // Commons IO
    implementation 'commons-io:commons-io:2.6'
    
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    // Spring Boot Devtools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    
    // Testing Dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.3.1'
    testImplementation 'org.springframework.security:spring-security-test'
}

compileJava {
    options.compilerArgs += '-parameters'
}

tasks.named('test') {
	useJUnitPlatform()
}

	/* dependencies
	추후 querydsl 방식도 고려해볼 것
	참고 : https://velog.io/@soyeon207/QueryDSL-Spring-Boot-%EC%97%90%EC%84%9C-QueryDSL-JPA-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0
	// https://mvnrepository.com/artifact/com.querydsl/querydsl-jpa
	implementation 'com.querydsl:querydsl-jpa'
	
	//QClass 를 생성하기 위한 라이브러리
	implementation 'com.querydsl:querydsl-apt'

	//QueryDSL JPA 의 경우에는 Q 클래스를 활용해서 동작하는데 @Entity 어노테이션을 선언한 클래스를 탐색하고, Q 클래스를 생성
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
	
	//Q 파일을 찾지 못해서 발생하는 오류인 java.lang.NoClassDefFoundError (javax.annotation.Entity / javax.annotation.Generated) 에러 발생 대응을 위한 코드
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	*/
/*
//QClass 소스도 함께 build 하기 위해서 sourceSets 에 해당 위치를 추가
def querydslSrcDir = 'src/main/generated'
sourceSets {
  main {
    java {
      srcDirs += [ querydslSrcDir ]
    }
  }
}
*/
/*
해당 내용을 명시해주지 않으면 Q 파일 내 Generated 를 import 할 때 
자바 9 에만 있는 import javax.annotation.processing.Generated 로 import 해준다.
그렇기 때문에 다른 버전에서도 사용할 수 있도록 java.annotation.Generated 로 import 하도록 설정하는 코드

compileJava {
    options.compilerArgs << '-Aquerydsl.generatedAnnotationClass=javax.annotation.Generated'
}
*/
/*
추후 major version 에선 삭제할 것이라고 소개하고 있기 때문에 generatedSourceOutputDirectory 를 사용
generatedSourceOutputDirectory 는 annotation processors 에서 생성한 소스 파일을 저장할 디렉토리를 지정 해준다. 
(Gradle 공식문서 → CompileOptions - Gradle DSL Version 7.5.1 )
이 코드를 통해 위에서 선언한 querydslSrcDir 변수의 src/main/generated 에다가 annotation processors 가 만든 QClass 들을 저장

tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
}

//build clean 시에 생성되었던 QClass 를 모두 삭제 (querydslSrcDir = src/main/generated)
clean {
  delete file(querydslSrcDir)
}
*/
